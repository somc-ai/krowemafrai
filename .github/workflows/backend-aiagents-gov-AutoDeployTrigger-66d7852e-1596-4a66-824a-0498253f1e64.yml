name: Trigger auto deployment for backend-aiagents-gov

# When this action will be executed
# Retry deployment after debugging changes
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/backend-aiagents-gov-AutoDeployTrigger-66d7852e-1596-4a66-824a-0498253f1e64.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Extract Azure credentials
        id: azure-creds
        run: |
          echo "Extracting Azure credentials from AZURE_CREDENTIALS secret..."
          TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.tenantId')
          CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')
          CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')
          
          echo "TENANT_ID extracted: ${TENANT_ID:0:8}..."
          echo "CLIENT_ID extracted: ${CLIENT_ID:0:8}..."
          echo "CLIENT_SECRET extracted: [REDACTED]"
          
          echo "AZURE_TENANT_ID=$TENANT_ID" >> $GITHUB_OUTPUT
          echo "AZURE_CLIENT_ID=$CLIENT_ID" >> $GITHUB_OUTPUT
          echo "AZURE_CLIENT_SECRET=$CLIENT_SECRET" >> $GITHUB_OUTPUT

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}/src/backend
          dockerfilePath: Dockerfile.azure
          registryUrl: ca2a76f03945acr.azurecr.io
          registryUsername: ${{ secrets.BACKENDAIAGENTSGOV_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.BACKENDAIAGENTSGOV_REGISTRY_PASSWORD }}
          containerAppName: backend-aiagents-gov
          resourceGroup: rg-info-2259
          imageToBuild: ca2a76f03945acr.azurecr.io/backend-aiagents-gov:${{ github.sha }}

      - name: Update Container App environment variables using Azure CLI
        run: |
          echo "Setting environment variables directly on Container App..."
          az containerapp update \
            --name backend-aiagents-gov \
            --resource-group rg-info-2259 \
            --set-env-vars \
              AZURE_OPENAI_ENDPOINT=https://somc-ai-gov-openai.openai.azure.com/ \
              AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o \
              AZURE_OPENAI_API_VERSION=2024-08-01-preview \
              AZURE_OPENAI_API_KEY="${{ secrets.AZURE_OPENAI_API_KEY }}" \
              AZURE_TENANT_ID="${{ steps.azure-creds.outputs.AZURE_TENANT_ID }}" \
              AZURE_CLIENT_ID="${{ steps.azure-creds.outputs.AZURE_CLIENT_ID }}" \
              AZURE_CLIENT_SECRET="${{ steps.azure-creds.outputs.AZURE_CLIENT_SECRET }}" \
              AZURE_AI_SUBSCRIPTION_ID=05cc117e-29ea-49f3-9428-c5d042340a91 \
              AZURE_AI_RESOURCE_GROUP=rg-info-2259 \
              AZURE_AI_PROJECT_NAME=ai-project-default \
              AZURE_AI_AGENT_ENDPOINT=https://somc-ai-gov-openai.openai.azure.com/ \
              COSMOSDB_ENDPOINT=https://cosmos-somc-ai-gov.documents.azure.com:443/ \
              COSMOSDB_DATABASE=macae \
              COSMOSDB_CONTAINER=memory \
              BACKEND_API_URL=https://backend-aiagents-gov.victoriouscoast-531c9ceb.westeurope.azurecontainerapps.io \
              FRONTEND_SITE_NAME=https://frontend-aiagents-gov.victoriouscoast-531c9ceb.westeurope.azurecontainerapps.io
          
          echo "Environment variables set successfully. Container App will restart automatically."


